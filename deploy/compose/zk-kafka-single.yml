name: fastapi_news-kafka

networks:
  private:
    driver: bridge

services:
  akhq:
    image: tchiotludo/akhq
    networks:
      - private
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - broker_1
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker_1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      AKHQ_CONFIGURATION: >
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: broker_1:9092

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - private
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker_1:
    # image: confluentinc/cp-kafka:latest
    image: confluentinc/cp-kafka:8.0.0
    restart: unless-stopped
    # hostname: broker
    # container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    networks:
      - private
    environment:
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_COMPRESSION_TYPE: "gzip"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker_1:9092"
      # KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker_1:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker_1:29092,CONTROLLER://broker_1:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: true
    links:
      - zookeeper
    healthcheck:
      test: nc -z localhost 9093
